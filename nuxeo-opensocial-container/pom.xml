<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.nuxeo.ecm.opensocial</groupId>
    <artifactId>nuxeo-opensocial-parent</artifactId>
    <version>5.4.2-HF32</version>
  </parent>

  <groupId>org.nuxeo.ecm.opensocial</groupId>
  <artifactId>nuxeo-opensocial-container</artifactId>
  <name>GWT2 Container</name>
  <description>GWT2 OpenSocial Container</description>
  <developers>
    <developer>
      <name>St√©phane Fourrier</name>
      <email>stephane.fourrier@ext.leroymerlin.fr</email>
    </developer>
  </developers>

  <properties>
    <gwt.module>org.nuxeo.opensocial.container.gwtContainer</gwt.module>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.nuxeo.ecm.opensocial</groupId>
      <artifactId>nuxeo-opensocial-spaces</artifactId>
    </dependency>
    <dependency>
      <groupId>org.nuxeo.ecm.opensocial</groupId>
      <artifactId>nuxeo-opensocial-gadgets</artifactId>
    </dependency>

    <dependency>
      <groupId>org.nuxeo.ecm.opensocial</groupId>
      <artifactId>nuxeo-gwt-richtexteditor</artifactId>
    </dependency>


    <dependency>
      <groupId>org.nuxeo.ecm.webengine</groupId>
      <artifactId>nuxeo-webengine-gwt</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.google.code.guice</groupId>
          <artifactId>guice</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.nuxeo.build</groupId>
          <artifactId>nuxeo-distribution-tools</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.google.code</groupId>
      <artifactId>gwt-dnd</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-dev</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>net.customware.gwt.presenter</groupId>
      <artifactId>gwt-presenter</artifactId>
    </dependency>
    <dependency>
      <groupId>net.customware.gwt.dispatch</groupId>
      <artifactId>gwt-dispatch</artifactId>
    </dependency>
    <dependency>
      <groupId>com.googlecode.gwt.inject</groupId>
      <artifactId>gin</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>gwt-servlet</artifactId>
          <groupId>com.google.gwt</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
    </dependency>
    <dependency>
 			<groupId>gwt.habyt</groupId>
 			<artifactId>gwt-habyt-upload</artifactId>
 		</dependency>

 		<dependency>
 			<groupId>commons-fileupload</groupId>
 			<artifactId>commons-fileupload</artifactId>
      <version>1.2.2</version>
 		</dependency>

    <dependency>
      <groupId>org.nuxeo.build</groupId>
      <artifactId>nuxeo-distribution-tools</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-nop</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Test scope -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
      </resource>

      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
      <!-- APT plugin for annotation preprocessing -->
      <plugin>
        <groupId>org.apache.myfaces.tobago</groupId>
        <artifactId>maven-apt-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-bindings</id>
            <goals>
              <goal>execute</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- end APT plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
        </configuration>
      </plugin>
      <!-- correctly generate eclipse files with GWT nature -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>false</downloadSources>
          <additionalProjectnatures>
            <projectnature>com.google.gwt.eclipse.core.gwtNature
            </projectnature>

            <projectnature>com.google.gdt.eclipse.core.webAppNature
            </projectnature>
          </additionalProjectnatures>
          <additionalBuildcommands>
            <buildCommand>
              <name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
              <arguments>
              </arguments>
              <name>com.google.gdt.eclipse.core.webAppProjectValidator</name>

              <arguments></arguments>
            </buildCommand>
          </additionalBuildcommands>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER
            </classpathContainer>
            <classpathContainer>com.google.gwt.eclipse.core.GWT_CONTAINER
            </classpathContainer>
          </classpathContainers>
          <buildOutputDirectory>war/WEB-INF/classes</buildOutputDirectory>
        </configuration>
      </plugin>

      <!--
         After compiling java sources compile java to JS using GWT compiler.
         This must be done process-classes after compile step finished to be
         sure we have all the needed files in classes directory. I am using
         ant for this since the maven exec plugin is not able to run
         correctly this
       -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>

          <execution>
            <id>compile-js</id>
            <phase>process-classes</phase>
            <configuration>
              <tasks>
                <property name="compile_classpath" refid="maven.compile.classpath"></property>
                <property name="runtime_classpath" refid="maven.runtime.classpath"></property>
                <java classname="com.google.gwt.dev.Compiler" failonerror="true" fork="true">

                  <classpath>
                    <pathelement location="${project.build.outputDirectory}"></pathelement>
                    <pathelement path="${compile_classpath}"></pathelement>
                    <pathelement path="${runtime_classpath}"></pathelement>
                  </classpath>

                  <jvmarg value="-Xmx256M"></jvmarg>
                  <!-- jvmarg value="${gwt.arg}" / -->
                  <arg value="-style"></arg>
                  <arg value="PRETTY"></arg>

                  <!-- to speed up compiler <arg value="-draftCompile" / -->
                  <arg value="-draftCompile"></arg>
                  <arg value="-war"></arg>
                  <arg value="${project.build.outputDirectory}/gwt-war"></arg>
                  <arg value="${gwt.module}"></arg>
                </java>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>